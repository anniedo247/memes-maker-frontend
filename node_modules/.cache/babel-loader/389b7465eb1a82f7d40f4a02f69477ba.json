{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/coderSchool/meme-maker-fe/src/components/MemeList.js\";\nimport React from \"react\";\nimport { Card, CardColumns } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MemeList = ({\n  memes,\n  showDetail\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (memes === null || memes === void 0 ? void 0 : memes.length) > 0 ? /*#__PURE__*/_jsxDEV(CardColumns, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: memes.map(meme => /*#__PURE__*/_jsxDEV(MemeCard, {\n          meme: meme,\n          showDetail: showDetail\n        }, meme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"There are no memes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = MemeList;\n\nconst MemeCard = ({\n  meme,\n  showDetail\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    border: \"primary\",\n    className: \"mouse-hover\",\n    style: {\n      width: \"\"\n    },\n    onClick: () => showDetail(meme),\n    children: /*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: `${process.env.REACT_APP_BACKEND_API}/${meme.outputMemePath.split(\"public/\")[1]}?${meme.updatedAt}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = MemeCard;\nexport default MemeList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MemeList\");\n$RefreshReg$(_c2, \"MemeCard\");","map":{"version":3,"sources":["/Volumes/Data/coderSchool/meme-maker-fe/src/components/MemeList.js"],"names":["React","Card","CardColumns","MemeList","memes","showDetail","length","map","meme","id","MemeCard","width","process","env","REACT_APP_BACKEND_API","outputMemePath","split","updatedAt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,iBAAlC;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA2B;AAC1C,sBACE;AAAA,cACG,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,MAAP,IAAgB,CAAhB,gBACC,QAAC,WAAD;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACGF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAhB;AAAsB,UAAA,UAAU,EAAEH;AAAlC,WAAmDG,IAAI,CAACC,EAAxD;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBASC;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ,mBADF;AAeD,CAhBD;;KAAMN,Q;;AAkBN,MAAMO,QAAQ,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQH,EAAAA;AAAR,CAAD,KAA0B;AACzC,sBACE,QAAC,IAAD;AACA,IAAA,MAAM,EAAC,SADP;AAEA,IAAA,SAAS,EAAC,aAFV;AAGA,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAC;AAAP,KAHP;AAIA,IAAA,OAAO,EAAE,MAAMN,UAAU,CAACG,IAAD,CAJzB;AAAA,2BAME,QAAC,IAAD,CAAM,GAAN;AACE,MAAA,OAAO,EAAC,KADV;AAEE,MAAA,GAAG,EAAG,GAAEI,OAAO,CAACC,GAAR,CAAYC,qBAAsB,IAC1CN,IAAI,CAACO,cAAL,CAAoBC,KAApB,CAA0B,SAA1B,EAAqC,CAArC,CACD,IAAGR,IAAI,CAACS,SAAU;AAJnB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBD;;MAAMP,Q;AAkBN,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport { Card, CardColumns } from \"react-bootstrap\";\n\nconst MemeList = ({ memes, showDetail }) => {\n  return (\n    <>\n      {memes?.length > 0 ? (\n        <CardColumns>\n          <ul className=\"list-unstyled\">\n            {memes.map((meme) => (\n              <MemeCard meme={meme} showDetail={showDetail} key={meme.id} />\n            ))}\n          </ul>\n        </CardColumns>\n      ) : (\n        <p className=\"text-center\">There are no memes</p>\n      )}\n    </>\n  );\n};\n\nconst MemeCard = ({ meme, showDetail }) => {\n  return (\n    <Card\n    border=\"primary\"\n    className=\"mouse-hover\"\n    style={{width:\"\"}}\n    onClick={() => showDetail(meme)}\n    >\n      <Card.Img\n        variant=\"top\"\n        src={`${process.env.REACT_APP_BACKEND_API}/${\n        meme.outputMemePath.split(\"public/\")[1]\n      }?${meme.updatedAt}`}\n      />\n    </Card>\n  );\n};\n\nexport default MemeList;\n"]},"metadata":{},"sourceType":"module"}