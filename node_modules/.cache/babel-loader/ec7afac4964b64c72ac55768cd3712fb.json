{"ast":null,"code":"import * as types from \"../constants/meme.constants\";\nconst initialState = {\n  memes: [],\n  totalPages: 1,\n  loading: true\n};\n\nconst memeReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case types.GET_MEMES_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case types.GET_MEMES_SUCCESS:\n      return { ...state,\n        memes: payload.memes,\n        totalPages: payload.totalPages,\n        loading: false\n      };\n\n    case types.GET_MEMES_FAILURE:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default memeReducer;","map":{"version":3,"sources":["/Volumes/Data/coderSchool/meme-maker-fe/src/redux/reducers/meme.reducers.js"],"names":["types","initialState","memes","totalPages","loading","memeReducer","state","action","type","payload","GET_MEMES_REQUEST","GET_MEMES_SUCCESS","GET_MEMES_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKR,KAAK,CAACU,iBAAX;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKJ,KAAK,CAACW,iBAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,KAAK,EAAEO,OAAO,CAACP,KAFV;AAGLC,QAAAA,UAAU,EAAEM,OAAO,CAACN,UAHf;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKJ,KAAK,CAACY,iBAAX;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF;AACE,aAAOE,KAAP;AAbJ;AAeD,CAjBD;;AAmBA,eAAeD,WAAf","sourcesContent":["import * as types from \"../constants/meme.constants\";\n\nconst initialState = {\n  memes: [],\n  totalPages: 1,\n  loading: true,\n};\n\nconst memeReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case types.GET_MEMES_REQUEST:\n      return { ...state, loading: true };\n    case types.GET_MEMES_SUCCESS:\n      return {\n        ...state,\n        memes: payload.memes,\n        totalPages: payload.totalPages,\n        loading: false,\n      };\n    case types.GET_MEMES_FAILURE:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default memeReducer;\n"]},"metadata":{},"sourceType":"module"}