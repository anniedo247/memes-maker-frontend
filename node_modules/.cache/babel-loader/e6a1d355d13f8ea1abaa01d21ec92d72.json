{"ast":null,"code":"import * as types from \"../constants/meme.constants\";\nimport api from \"../apiService\";\n\nconst memesRequest = pageNum => async dispatch => {\n  dispatch({\n    type: types.GET_MEMES_REQUEST\n  });\n\n  try {\n    const url = `/memes?page=${pageNum}&perPage=9`;\n    const res = await api.get(url);\n    console.log(\"res\", res.data.memes);\n    dispatch({\n      type: types.GET_MEMES_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.GET_MEMES_FAILURE,\n      payload: error\n    });\n  }\n};\n\nconst memeActions = {\n  memesRequest\n};\nexport default memeActions;","map":{"version":3,"sources":["/Volumes/Data/coderSchool/meme-maker-fe/src/redux/actions/meme.actions.js"],"names":["types","api","memesRequest","pageNum","dispatch","type","GET_MEMES_REQUEST","url","res","get","console","log","data","memes","GET_MEMES_SUCCESS","payload","error","GET_MEMES_FAILURE","memeActions"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,YAAY,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd,GAAD,CAAR;;AACA,MAAI;AACF,UAAMC,GAAG,GAAI,eAAcJ,OAAQ,YAAnC;AACA,UAAMK,GAAG,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQF,GAAR,CAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAb,EAAmBH,GAAG,CAACI,IAAJ,CAASC,KAA5B;AACAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,KAAK,CAACc,iBAAd;AAAiCC,MAAAA,OAAO,EAAEP,GAAG,CAACI;AAA9C,KAAD,CAAR;AACD,GALD,CAKE,OAAOI,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,KAAK,CAACiB,iBAAd;AAAiCF,MAAAA,OAAO,EAAEC;AAA1C,KAAD,CAAR;AACD;AACF,CAVD;;AAYA,MAAME,WAAW,GAAG;AAClBhB,EAAAA;AADkB,CAApB;AAIA,eAAegB,WAAf","sourcesContent":["import * as types from \"../constants/meme.constants\";\nimport api from \"../apiService\";\n\nconst memesRequest = (pageNum) => async (dispatch) => {\n  dispatch({ type: types.GET_MEMES_REQUEST });\n  try {\n    const url = `/memes?page=${pageNum}&perPage=9`;\n    const res = await api.get(url);\n    console.log (\"res\",res.data.memes)\n    dispatch({ type: types.GET_MEMES_SUCCESS, payload: res.data });\n  } catch (error) {\n    dispatch({ type: types.GET_MEMES_FAILURE, payload: error });\n  }\n};\n\nconst memeActions = {\n  memesRequest,\n};\n\nexport default memeActions;"]},"metadata":{},"sourceType":"module"}